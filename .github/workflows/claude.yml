name: "Claude Code Assistant"

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue or PR number to process'
        required: false
        type: string

# Simplified concurrency management
concurrency:
  group: claude-assistant-${{ github.event.issue.number || github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  claude-assistant:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude'))) ||
      github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Get context information
        id: context
        uses: actions/github-script@v7
        with:
          script: |
            let issueNumber, contextType;
            
            if (context.eventName === 'workflow_dispatch') {
              issueNumber = '${{ github.event.inputs.issue_number }}' || context.issue.number;
              contextType = 'manual';
            } else if (context.eventName === 'issue_comment') {
              issueNumber = context.issue.number;
              contextType = 'comment';
            } else if (context.eventName === 'pull_request_review_comment') {
              issueNumber = context.payload.pull_request.number;
              contextType = 'review_comment';
            } else if (context.eventName === 'pull_request_review') {
              issueNumber = context.payload.pull_request.number;
              contextType = 'review';
            } else if (context.eventName === 'issues') {
              issueNumber = context.issue.number;
              contextType = 'issue';
            }
            
            console.log(`Processing ${contextType} for #${issueNumber}`);
            core.setOutput('issue_number', issueNumber);
            core.setOutput('context_type', contextType);

      - name: Process Claude request
        uses: actions/github-script@v7
        env:
          ISSUE_NUMBER: ${{ steps.context.outputs.issue_number }}
          CONTEXT_TYPE: ${{ steps.context.outputs.context_type }}
        with:
          script: |
            const issueNumber = parseInt(process.env.ISSUE_NUMBER);
            const contextType = process.env.CONTEXT_TYPE;

            // Simple Claude assistant response
            const response = "## ü§ñ Claude Assistant Response\n\n" +
              "Thank you for mentioning me! I'm here to help with code review and assistance.\n\n" +
              `**Context**: ${contextType}\n` +
              `**Issue/PR**: #${issueNumber}\n\n` +
              "For more detailed assistance, please use the dedicated Claude review workflows.\n\n" +
              "---\n" +
              "*Claude Assistant - Simplified Mode*";
            
            // Post response
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: response
            });
            
            console.log(`Claude assistant response posted to #${issueNumber}`);

  summary:
    needs: claude-assistant
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Assistant Summary
        run: |
          echo "üèÅ Claude Assistant Summary"
          echo "=========================="
          echo "Job Result: ${{ needs.claude-assistant.result }}"
          
          if [ "${{ needs.claude-assistant.result }}" = "success" ]; then
            echo "‚úÖ Claude assistant completed successfully"
          else
            echo "‚ùå Claude assistant failed or was skipped"
          fi
