name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install axios

      - name: Claude Direct API Call
        uses: actions/github-script@v7
        with:
          script: |
            const axios = require('axios');
            
            console.log('ü§ñ Starting Claude direct API call...');
            
            // Get the comment content
            let commentBody = '';
            if (context.eventName === 'issue_comment') {
              commentBody = context.payload.comment.body;
            } else if (context.eventName === 'pull_request_review_comment') {
              commentBody = context.payload.comment.body;
            } else if (context.eventName === 'pull_request_review') {
              commentBody = context.payload.review.body;
            } else if (context.eventName === 'issues') {
              commentBody = context.payload.issue.body || context.payload.issue.title;
            }
            
            console.log('Comment body:', commentBody);
            
            // Prepare the prompt
            const prompt = `You are Claude, an AI assistant helping with code review and development tasks.
            
            User request: ${commentBody}
            
            Please provide a helpful response. If this is a code review request, analyze the PR and provide specific feedback.
            
            Repository: ${context.repo.owner}/${context.repo.repo}
            Event: ${context.eventName}
            `;
            
            try {
              console.log('üîë Making API call to Anthropic...');
              
              const response = await axios.post('https://api.anthropic.com/v1/messages', {
                model: 'claude-3-5-sonnet-20241022',
                max_tokens: 4000,
                messages: [
                  {
                    role: 'user',
                    content: prompt
                  }
                ]
              }, {
                headers: {
                  'Authorization': `Bearer ${{ secrets.TEST_API_KEY }}`,
                  'Content-Type': 'application/json',
                  'anthropic-version': '2023-06-01'
                }
              });
              
              console.log('‚úÖ API call successful');
              
              const claudeResponse = response.data.content[0].text;
              
              // Post the response as a comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `${claudeResponse}

---
*Claude AI Assistant - Direct API Implementation*`
              });
              
              console.log('‚úÖ Response posted successfully');
              
            } catch (error) {
              console.error('‚ùå Error:', error.message);
              
              let errorMessage = 'Unknown error occurred';
              if (error.response) {
                console.error('Response status:', error.response.status);
                console.error('Response data:', error.response.data);
                
                if (error.response.status === 401) {
                  errorMessage = 'Invalid API key - please check ANTHROPIC_API_KEY secret';
                } else if (error.response.status === 429) {
                  errorMessage = 'Rate limit exceeded - please try again later';
                } else if (error.response.status === 400) {
                  errorMessage = 'Bad request - check API parameters';
                } else {
                  errorMessage = `API error: ${error.response.status} - ${error.response.data?.error?.message || 'Unknown error'}`;
                }
              } else if (error.code === 'ENOTFOUND') {
                errorMessage = 'Network error - cannot reach Anthropic API';
              }
              
              // Post error message
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## ‚ùå Claude API Error

**Error**: ${errorMessage}

### üîç Troubleshooting
- Check that ANTHROPIC_API_KEY secret is configured
- Verify API key has sufficient credits
- Check [Anthropic Status](https://status.anthropic.com/) for service issues

### üìä Technical Details
- **Error Type**: ${error.name || 'Unknown'}
- **Status Code**: ${error.response?.status || 'N/A'}
- **Timestamp**: ${new Date().toISOString()}

---
*Claude AI Assistant - Direct API Implementation*`
              });
              
              throw error;
            }
