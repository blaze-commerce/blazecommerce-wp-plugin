name: "Priority 2: Claude AI Approval Gate"

# This workflow creates a required status check that only passes when Claude AI has approved the PR
# Use this with GitHub Branch Protection Rules to block merging until Claude AI approval
# Priority 2: Runs after Claude AI Review (Priority 1) completes

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted, dismissed]

# Priority 2: Wait for Priority 1 (Claude Review) to complete before running
concurrency:
  group: priority-2-claude-approval-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: false  # Don't cancel to ensure approval gate completion

jobs:
  claude-approval-gate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    permissions:
      contents: read
      pull-requests: read
      statuses: write
      checks: write
    
    steps:
      - name: Check Claude AI Approval Status
        id: check-approval
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üîç Checking Claude AI approval status for PR gate...');
            
            try {
              // Get PR number from context
              const prNumber = context.payload.pull_request?.number || context.payload.number;
              
              if (!prNumber) {
                console.log('‚ùå No PR number found in context');
                return { approved: false, reason: 'No PR context' };
              }
              
              console.log(`üìã Checking approval status for PR #${prNumber}`);
              
              // Get all reviews for the PR
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                per_page: 100
              });
              
              console.log(`Found ${reviews.data.length} reviews to analyze`);
              
              // Look for Claude AI approval
              const claudeApproval = reviews.data.find(review => 
                review.state === 'APPROVED' && 
                (review.user.login === 'blazecommerce-claude-ai' || 
                 review.user.login === 'github-actions[bot]' ||
                 (review.body && review.body.includes('BlazeCommerce Claude AI Review Bot')))
              );
              
              if (claudeApproval) {
                console.log(`‚úÖ Found Claude AI approval by ${claudeApproval.user.login} at ${claudeApproval.submitted_at}`);
                core.setOutput('approved', 'true');
                core.setOutput('approver', claudeApproval.user.login);
                core.setOutput('approved_at', claudeApproval.submitted_at);
                return { 
                  approved: true, 
                  approver: claudeApproval.user.login,
                  approvedAt: claudeApproval.submitted_at
                };
              } else {
                console.log('‚ùå No Claude AI approval found');
                core.setOutput('approved', 'false');
                core.setOutput('reason', 'Claude AI approval required');
                return { approved: false, reason: 'Claude AI approval required' };
              }
              
            } catch (error) {
              console.error(`Error checking Claude AI approval: ${error.message}`);
              core.setOutput('approved', 'false');
              core.setOutput('reason', `Error: ${error.message}`);
              return { approved: false, reason: `Error: ${error.message}` };
            }

      - name: Set Success Status
        if: steps.check-approval.outputs.approved == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const approver = '${{ steps.check-approval.outputs.approver }}';
            const approvedAt = '${{ steps.check-approval.outputs.approved_at }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request?.head?.sha || context.sha,
              state: 'success',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${context.payload.pull_request?.number || context.payload.number}`,
              description: `Approved by ${approver} at ${new Date(approvedAt).toLocaleString()}`,
              context: 'claude-ai/approval-required'
            });
            
            console.log(`‚úÖ Set success status - Claude AI approval confirmed`);

      - name: Set Pending Status
        if: steps.check-approval.outputs.approved == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const reason = '${{ steps.check-approval.outputs.reason }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request?.head?.sha || context.sha,
              state: 'pending',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/pull/${context.payload.pull_request?.number || context.payload.number}`,
              description: 'Waiting for Claude AI approval before merge',
              context: 'claude-ai/approval-required'
            });
            
            console.log(`‚è≥ Set pending status - ${reason}`);

      - name: Post Status Comment (First Time Only)
        if: steps.check-approval.outputs.approved == 'false' && github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const statusComment = `## üõ°Ô∏è Claude AI Approval Required

            This PR requires approval from the Claude AI Review Bot before it can be merged.

            ### üìã Current Status
            - **Claude AI Approval**: ‚ùå Not yet approved
            - **Merge Status**: üö´ Blocked until approval

            ### üîÑ Next Steps
            1. Wait for the Claude AI Review Bot to analyze your PR
            2. Address any REQUIRED recommendations if found
            3. Once approved by Claude AI, this check will pass automatically
            4. The PR will then be ready for merge (subject to other branch protection rules)

            ### ‚ÑπÔ∏è About This Check
            This is an automated gate that ensures all PRs receive Claude AI review before merging. The check will update automatically when Claude AI provides approval.

            ---
            *Claude AI Approval Gate - Automated Merge Protection*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: statusComment
            });

            console.log('üìù Posted initial status comment for Claude AI approval requirement');
