name: "ü§ñ Priority 1: Claude AI Code Review Trigger"

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches-ignore:
      - main
      - develop
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to trigger Claude review for'
        required: false

# Priority 1: Highest priority workflow - PR-specific concurrency to prevent conflicts
concurrency:
  group: priority-1-claude-trigger-pr-${{ github.event.pull_request.number || github.event.inputs.pr_number || github.ref }}
  cancel-in-progress: true  # Cancel previous runs for better performance

jobs:
  trigger-claude-review:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop') ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      pr_number: ${{ steps.detect-pr.outputs.pr_number }}
      claude_triggered: ${{ steps.trigger-claude.outputs.triggered }}
      trigger_method: ${{ steps.trigger-claude.outputs.method }}

    permissions:
      # Minimum required permissions for triggering Claude AI review
      contents: read          # Required: Read repository content
      pull-requests: write    # Required: Comment on PRs to trigger Claude
      issues: write           # Required: Create comments on PR discussions
      actions: read           # Required: Read workflow information
      # Security: All other permissions explicitly denied

    steps:
      - name: Debug Workflow Trigger
        run: |
          echo "üîç Priority 1 Claude AI Review Trigger activated!"
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Ref: ${{ github.ref }}"
          echo "Head Ref: ${{ github.head_ref }}"
          echo "Base Ref: ${{ github.base_ref }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Timestamp: $(date -u)"
          echo "Workflow Run ID: ${{ github.run_id }}"

      - name: Detect PR Number for Push Events
        id: detect-pr
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            // For push events, find the associated PR
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });

            if (pulls.length > 0) {
              const prNumber = pulls[0].number;
              console.log(`Found PR #${prNumber} for push to ${context.ref}`);
              core.setOutput('pr_number', prNumber.toString());
              core.setOutput('has_pr', 'true');
            } else {
              console.log(`No open PR found for push to ${context.ref}`);
              core.setOutput('pr_number', '');
              core.setOutput('has_pr', 'false');
            }

      - name: Skip Non-PR Push Events
        if: github.event_name == 'push' && steps.detect-pr.outputs.has_pr == 'false'
        run: |
          echo "‚è≠Ô∏è Skipping: Push to ${{ github.ref }} has no associated open PR"
          exit 0

      - name: Validate Organization
        run: |
          if [[ "${{ github.repository_owner }}" != "blaze-commerce" ]]; then
            echo "‚ùå ERROR: This workflow is designed for blaze-commerce organization only"
            echo "Current repository: ${{ github.repository }}"
            exit 1
          fi
          echo "‚úÖ SUCCESS: Repository validation passed"
          echo "Organization: ${{ github.repository_owner }}"
          echo "Repository: ${{ github.repository }}"

      - name: Trigger Official Claude GitHub App Review
        id: trigger-claude
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.pull_request.number || steps.detect-pr.outputs.pr_number || github.event.inputs.pr_number }};
            
            if (!prNumber) {
              console.log('‚ùå ERROR: Could not determine PR number');
              core.setOutput('triggered', 'false');
              core.setOutput('method', 'none');
              return;
            }

            console.log(`ü§ñ Triggering Claude AI review for PR #${prNumber}`);

            // Post a comment mentioning @claude to trigger the official Claude GitHub App
            const reviewTriggerComment = `@claude Please review this PR for:

**Code Quality & Standards:**
- WordPress coding standards and best practices
- PHP 7.4+ compatibility and modern PHP features
- Proper sanitization and validation of user inputs
- Secure database queries using WordPress APIs

**Security & Performance:**
- WordPress security best practices (nonces, capability checks, sanitization)
- Performance optimization for WordPress environments
- Proper use of WordPress hooks and filters
- Caching considerations and database query optimization

**BlazeCommerce Specific:**
- Integration with WooCommerce APIs and hooks
- Compatibility with BlazeCommerce frontend systems
- Proper handling of product data and customer information
- API endpoint security and rate limiting

**Testing & Documentation:**
- PHPUnit tests for WordPress plugin functionality
- Proper inline documentation and code comments
- Integration test considerations for WordPress/WooCommerce

Please provide categorized feedback:
- **CRITICAL: REQUIRED** - Security issues, breaking changes, or critical bugs
- **WARNING: IMPORTANT** - Performance issues, code quality problems, or best practice violations
- **INFO: SUGGESTIONS** - Optional improvements, refactoring opportunities, or enhancements

Focus on actionable feedback that improves security, performance, and maintainability.`;

            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: reviewTriggerComment
              });

              console.log('‚úÖ SUCCESS: Claude AI review triggered via @claude mention');
              core.setOutput('triggered', 'true');
              core.setOutput('method', 'mention');
              core.setOutput('pr_number', prNumber.toString());
            } catch (error) {
              console.log(`‚ùå ERROR: Failed to trigger Claude AI review: ${error.message}`);
              core.setOutput('triggered', 'false');
              core.setOutput('method', 'failed');
            }

      - name: Workflow Completion Summary
        run: |
          echo "üéØ Priority 1: Claude AI Review Trigger Workflow Complete"
          echo ""
          echo "üìä Summary:"
          echo "  - Workflow: Priority 1 Claude AI Review Trigger"
          echo "  - Event: ${{ github.event_name }}"
          echo "  - PR Number: ${{ github.event.pull_request.number || steps.detect-pr.outputs.pr_number || github.event.inputs.pr_number }}"
          echo "  - Claude Triggered: ${{ steps.trigger-claude.outputs.triggered }}"
          echo "  - Trigger Method: ${{ steps.trigger-claude.outputs.method }}"
          echo "  - Repository: ${{ github.repository }}"
          echo "  - Commit SHA: ${{ github.sha }}"
          echo ""
          echo "üîÑ Next Steps:"
          echo "  1. Official Claude GitHub App will analyze the PR"
          echo "  2. Claude will post detailed review comments"
          echo "  3. Priority 2 Approval Gate will evaluate Claude's feedback"
          echo "  4. @blazecommerce-claude-ai will approve if no REQUIRED issues found"
          echo ""
          echo "‚úÖ Priority 1 workflow completed successfully!"
